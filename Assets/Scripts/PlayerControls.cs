//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""BattleControls"",
            ""id"": ""8ed78d28-2c60-470f-9e94-5b05d29890e7"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""f0c6e015-d04c-4218-bff4-5c7f63661313"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jab"",
                    ""type"": ""Button"",
                    ""id"": ""0c2e6edd-f71d-4f1e-a5d3-85a081318b43"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Strong"",
                    ""type"": ""Button"",
                    ""id"": ""567bc78d-5a19-477b-8e14-087e38965cbc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fierce"",
                    ""type"": ""Button"",
                    ""id"": ""71f48569-1196-4d67-96b1-c1ea009e9166"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""33155e42-9927-468b-975e-5d34185cbf7e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""911659cc-5ba5-4159-a62c-c339ed757a7f"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""27251f81-4222-4998-aade-7fc5ecf299a0"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4843c5c0-5345-496c-9d80-dcb895115f43"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""91520f17-337d-4dbd-9c40-b44b44708075"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e341a4cb-30e8-4aaf-b403-3e041fe542eb"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dd0e7f84-eb0d-4810-9e00-70c3ac9cfe86"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Strong"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""17cd8a2a-4cfd-490e-9c8b-3b3dc9634f4c"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fierce"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // BattleControls
        m_BattleControls = asset.FindActionMap("BattleControls", throwIfNotFound: true);
        m_BattleControls_Movement = m_BattleControls.FindAction("Movement", throwIfNotFound: true);
        m_BattleControls_Jab = m_BattleControls.FindAction("Jab", throwIfNotFound: true);
        m_BattleControls_Strong = m_BattleControls.FindAction("Strong", throwIfNotFound: true);
        m_BattleControls_Fierce = m_BattleControls.FindAction("Fierce", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // BattleControls
    private readonly InputActionMap m_BattleControls;
    private IBattleControlsActions m_BattleControlsActionsCallbackInterface;
    private readonly InputAction m_BattleControls_Movement;
    private readonly InputAction m_BattleControls_Jab;
    private readonly InputAction m_BattleControls_Strong;
    private readonly InputAction m_BattleControls_Fierce;
    public struct BattleControlsActions
    {
        private @PlayerControls m_Wrapper;
        public BattleControlsActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_BattleControls_Movement;
        public InputAction @Jab => m_Wrapper.m_BattleControls_Jab;
        public InputAction @Strong => m_Wrapper.m_BattleControls_Strong;
        public InputAction @Fierce => m_Wrapper.m_BattleControls_Fierce;
        public InputActionMap Get() { return m_Wrapper.m_BattleControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BattleControlsActions set) { return set.Get(); }
        public void SetCallbacks(IBattleControlsActions instance)
        {
            if (m_Wrapper.m_BattleControlsActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_BattleControlsActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_BattleControlsActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_BattleControlsActionsCallbackInterface.OnMovement;
                @Jab.started -= m_Wrapper.m_BattleControlsActionsCallbackInterface.OnJab;
                @Jab.performed -= m_Wrapper.m_BattleControlsActionsCallbackInterface.OnJab;
                @Jab.canceled -= m_Wrapper.m_BattleControlsActionsCallbackInterface.OnJab;
                @Strong.started -= m_Wrapper.m_BattleControlsActionsCallbackInterface.OnStrong;
                @Strong.performed -= m_Wrapper.m_BattleControlsActionsCallbackInterface.OnStrong;
                @Strong.canceled -= m_Wrapper.m_BattleControlsActionsCallbackInterface.OnStrong;
                @Fierce.started -= m_Wrapper.m_BattleControlsActionsCallbackInterface.OnFierce;
                @Fierce.performed -= m_Wrapper.m_BattleControlsActionsCallbackInterface.OnFierce;
                @Fierce.canceled -= m_Wrapper.m_BattleControlsActionsCallbackInterface.OnFierce;
            }
            m_Wrapper.m_BattleControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Jab.started += instance.OnJab;
                @Jab.performed += instance.OnJab;
                @Jab.canceled += instance.OnJab;
                @Strong.started += instance.OnStrong;
                @Strong.performed += instance.OnStrong;
                @Strong.canceled += instance.OnStrong;
                @Fierce.started += instance.OnFierce;
                @Fierce.performed += instance.OnFierce;
                @Fierce.canceled += instance.OnFierce;
            }
        }
    }
    public BattleControlsActions @BattleControls => new BattleControlsActions(this);
    public interface IBattleControlsActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnJab(InputAction.CallbackContext context);
        void OnStrong(InputAction.CallbackContext context);
        void OnFierce(InputAction.CallbackContext context);
    }
}
